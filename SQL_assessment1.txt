--1 Create a SQL statement to list all managers and their titles. 

select e.emp_no as employee_no, concat(e.first_name,' ',e.last_name) as full_name, t.title as title 
from dept_manager dm 
left join employees e on dm.emp_no = e.emp_no 
left join titles t on e.emp_no = t.emp_no; 

--2 Create a SQL statement to show the salary of all employees and their department name.

with sals as( 
with a as( 
Select e.emp_no as employee_no, concat(e.first_name,' ',e.last_name) as full_name,   
d.dept_name as department, s.salary as salary, rank() over(partition by e.emp_no order by s.to_date desc) as rn 
From employees e 
Left join salaries s on e.emp_no=s.emp_no 
Left join dept_emp de on e.emp_no = de.emp_no 
Left join departments d on de.dept_no = d.dept_no) 
select * from a where rn=1) 

select * from sals; 

--3 Create a SQL statement to show the hire date and birth date who belongs to HR department.

With cte as( 
Select e.*,d.dept_name 
From employees e 
Left join dept_emp de on e.emp_no = de.emp_no 
Left join departments d on de.dept_no = d.dept_no 
Union 
Select e.*,d.dept_name 
From employees e 
Left join dept_manager dm on e.emp_no = dm.emp_no 
Left join departments d on dm.dept_no = d.dept_no) 

Select birth_date, hire_date from cte 
Where dept_name = 'Human Resources'; 

--4 Create a SQL statement to show all departments and their department’s managers. 

with dept_managers as( 
with cte as( 
Select d.dept_name, concat(e.first_name,' ',e.last_name) as manager_name, dm.to_date, rank() over(partition by dept_name order by to_date desc) as rn 
From departments d  
Left join dept_manager dm on d.dept_no = dm.dept_no  
Left join employees e on dm.emp_no = e.emp_no) 
select * from cte ) 

select dept_name, manager_name from dept_managers; 

--5 Create a SQL statement to show a list of HR’s employees who were hired after 1986. 

With cte as( 
Select e.*,d.dept_name 
From employees e 
Left join dept_emp de on e.emp_no = de.emp_no 
Left join departments d on de.dept_no = d.dept_no 
Union 
Select e.*,d.dept_name 
From employees e 
Left join dept_manager dm on e.emp_no = dm.emp_no 
Left join departments d on dm.dept_no = d.dept_no) 

Select * from cte 
Where dept_name = 'Human Resources' 
and year(hire_date)>1986; 

--6 Create a SQL statement to increase any employee’s salary up to 2%. Assume the employee has just phoned in with his/her last name. 

DROP TEMPORARY TABLE IF EXISTS sal; 

CREATE TEMPORARY TABLE sal( 
with cte as(  
Select concat(e.first_name,' ',e.last_name) as full_name, s.salary as salary, rank() over(partition by full_name order by s.to_date desc) as rn 
From employees e  
Left join salaries s on e.emp_no = s.emp_no) 
select full_name,salary from cte where rn = 1
);  

DROP procedure IF EXISTS update_sal; 

DELIMITER $$ 
CREATE PROCEDURE update_sal(IN name VARCHAR(25), IN percent_increase real) 
BEGIN 
UPDATE sal SET salary = salary*(1+(percent_increase/100)) 
WHERE full_name = name;  
END $$ 
DELIMITER; 

CALL update_sal('Georgi Facello',2); 

--7 Create a SQL statement to delete employee’s record who belongs to marketing department and name start with A.

CREATE TEMPORARY TABLE emp( 
Select e.*,d.dept_name 
From employees e 
Left join dept_emp de on e.emp_no = de.emp_no 
Left join departments d on de.dept_no = d.dept_no); 

INSERT INTO emp( 
Select e.*,d.dept_name 
From employees e 
Left join dept_manager dm on e.emp_no = dm.emp_no 
Left join departments d on dm.dept_no = d.dept_no); 

DELIMITER $$ 
CREATE PROCEDURE dele_emp(IN department VARCHAR(25), IN start CHAR(1)) 
BEGIN 
DELETE FROM emp 
WHERE dept_name = department AND first_name LIKE CONCAT(start, '%'); 
END $$ 
DELIMITER; 

CALL dele_emp('Marketing', 'A'); 

--8 Create a database view to list the full names of all departments’ managers, and their salaries. 

Create view manager as( 
Select e.*, concat(e.first_name,' ',e.last_name) as full_name, s.salary as salary, d.dept_name as department, rank() over(partition by e.emp_no order by s.to_date desc) as rn, dm. to_date 
From departments d 
Left join dept_manager dm on dm.dept_no = d.dept_no 
Left join employees e on dm.emp_no = e.emp_no 
Left join salaries s on e.emp_no = s.emp_no); 

Select department, full_name, salary from manager 
Where rn = 1; 

--9 Create a database view to list all departments and their department’s managers, who were hired between 1980 and 1990.

-- Use view (manager) created in previous question. 
Select department, full_name  
from manager 
Where year(hire_date)>=1980 
And year(hire_date)<=1990 
And rn = 1; 

--Create a SQL statement to increase salaries of all department’s managers up to 10% who are working since 1990.

-- Use view (manager) created in previous question. 
DELIMITER $$ 
CREATE PROCEDURE update_sal(IN amount real) 
BEGIN 
update manager 
set salary = salary*(amount) 
where year(hire_date)=>1990 
END $$ 
DELIMITER; 

CALL update_sal('1.1'); 
